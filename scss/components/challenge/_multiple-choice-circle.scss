@use "sass:math";

.multiple-choice-circle {
    @include vertical-layout(
        (
            gap: "xl",
            align: stretch,
        )
    );
    max-width: 800px;
    min-width: 400px;
    width: fit-content;
    margin: 0 auto;
    padding: spacing("xl");

    .progress {
        width: 100%;
    }

    &__content {
        position: relative;
        min-height: 400px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .question {
        position: absolute;
        z-index: 1;
        width: fit-content;
        max-width: 90%;
    }

    .multiple-choice-options {
        position: absolute;
        inset: 0;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .multiple-choice-option {
        position: absolute;
        transform-origin: center;
        z-index: z-index("modal");

        @for $i from 1 through 8 {
            &:nth-child(#{$i}) {
                $angle: ($i - 1) * math.div(360deg, 8);
                $radius: 180px;
                left: 50%;
                top: 50%;
                transform: translate(-50%, -50%)
                    rotate($angle)
                    translateX($radius)
                    rotate(-$angle);
            }
        }
    }

    @include responsive-layout("small") {
        padding: spacing("md");

        &__content {
            min-height: 300px;
        }

        .question {
            width: 250px;
        }

        .multiple-choice-option {
            span {
                min-width: 50px;
                min-height: 50px;
                max-width: 100px;
                font-size: font-size("300");
                padding: spacing("xs") spacing("sm");
            }

            @for $i from 1 through 8 {
                &:nth-child(#{$i}) {
                    $angle: ($i - 1) * math.div(360deg, 8);
                    $radius: 140px;
                    transform: translate(-50%, -50%)
                        rotate($angle)
                        translateX($radius)
                        rotate(-$angle);
                }
            }
        }
    }
}
